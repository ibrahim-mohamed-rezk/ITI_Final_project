{"ast":null,"code":"/* import { useNavigate } from \"react-router-dom\"; */\n\nexport const UseCheckLogin = () => {\n  const user = localStorage.getItem(\"name\");\n  const islogin = localStorage.getItem(\"isLogin\");\n  if (user && islogin) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/* UseCheckLogin uses the useNavigate hook from the \"react-router-dom\" library\nto check if a user is logged in by retrieving information from the local storage. */\n\n/* The component uses the localStorage API to retrieve values stored in the browser's local storage.\nIt fetches the values associated with the keys \"name\" and \"isLogin\" and stores them\nin the user and islogin variables, respectively. */\n_c = UseCheckLogin;\nvar _c;\n$RefreshReg$(_c, \"UseCheckLogin\");","map":{"version":3,"names":["UseCheckLogin","user","localStorage","getItem","islogin","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/e-commerce/ITI_Final_project/src/hooks/UseCheckLogin.js"],"sourcesContent":["/* import { useNavigate } from \"react-router-dom\"; */\n\nexport const UseCheckLogin = () => {\n  const user = localStorage.getItem(\"name\");\n  const islogin = localStorage.getItem(\"isLogin\");\n\n  if (user && islogin) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/* UseCheckLogin uses the useNavigate hook from the \"react-router-dom\" library\nto check if a user is logged in by retrieving information from the local storage. */\n\n/* The component uses the localStorage API to retrieve values stored in the browser's local storage.\nIt fetches the values associated with the keys \"name\" and \"isLogin\" and stores them\nin the user and islogin variables, respectively. */"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,aAAa,GAAGA,CAAA,KAAM;EACjC,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAE/C,IAAIF,IAAI,IAAIG,OAAO,EAAE;IACnB,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAO,KAAK;EACd;AACF,CAAC;;AAGD;AACA;;AAEA;AACA;AACA;AAFAC,EAAA,GAfaL,aAAa;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}